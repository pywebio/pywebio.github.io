"use strict";(self.webpackChunkpy_web_io_blog=self.webpackChunkpy_web_io_blog||[]).push([[903],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),g=c(n),m=o,b=g["".concat(i,".").concat(m)]||g[m]||p[m]||s;return n?r.createElement(b,u(u({ref:t},l),{},{components:n})):r.createElement(b,u({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,u=new Array(s);u[0]=g;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,u[1]=a;for(var c=2;c<s;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1044:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),u=["components"],a={slug:"docusaurus-cms",title:"Use Docusaurus and GitHub Actions as a CMS",description:"A guide to setting up Docusaurus and GitHub Actions as a content management system to an existing GitHub Pages website",image:"/img/blog/docusaurus_gh_cms.png",authors:["young","terrell"],tags:["PyWeb.io","Docusaurus","CMS","GitHub Actions"],keywords:["Docusaurus","GitHub Actions","CMS"]},i=void 0,c={permalink:"/docs/blog/docusaurus-cms",source:"@site/blog/2022-04-08-docusaurus-cms/index.mdx",title:"Use Docusaurus and GitHub Actions as a CMS",description:"A guide to setting up Docusaurus and GitHub Actions as a content management system to an existing GitHub Pages website",date:"2022-04-08T00:00:00.000Z",formattedDate:"April 8, 2022",tags:[{label:"PyWeb.io",permalink:"/docs/blog/tags/py-web-io"},{label:"Docusaurus",permalink:"/docs/blog/tags/docusaurus"},{label:"CMS",permalink:"/docs/blog/tags/cms"},{label:"GitHub Actions",permalink:"/docs/blog/tags/git-hub-actions"}],readingTime:3.97,truncated:!0,authors:[{name:"Hannah Young",title:"Software Developer",url:"https://github.com/Corgibyte",imageURL:"https://github.com/Corgibyte.png",key:"young"},{name:"Jeff Terrell",title:"Generalist",url:"https://github.com/JeffTerrell",imageURL:"https://github.com/JeffTerrell.png",key:"terrell"}],frontMatter:{slug:"docusaurus-cms",title:"Use Docusaurus and GitHub Actions as a CMS",description:"A guide to setting up Docusaurus and GitHub Actions as a content management system to an existing GitHub Pages website",image:"/img/blog/docusaurus_gh_cms.png",authors:["young","terrell"],tags:["PyWeb.io","Docusaurus","CMS","GitHub Actions"],keywords:["Docusaurus","GitHub Actions","CMS"]}},l={authorsImageUrls:[void 0,void 0]},p=[{value:"Problem \u2753",id:"problem-",level:2},{value:"Solution \u2714\ufe0f",id:"solution-\ufe0f",level:2}],g={toc:p};function m(e){var t=e.components,a=(0,o.Z)(e,u);return(0,s.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Docusaurus CMS",src:n(5316).Z,width:"970",height:"300"})),(0,s.kt)("h2",{id:"problem-"},"Problem \u2753"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/cloudy.png",alt:"-----------------------------------------------------"})),(0,s.kt)("p",null,"Adding a Docusaurus powered blog and tutorial section to the existing PyWeb.io website hosted on GitHub Pages. Docusaurus has excellent documentation on deploying to GitHub Pages. However, with a pre-existing deployed GitHub pages website, there is a need to add the Docusaurus generated static files to this deployment without disrupting the existing structure."),(0,s.kt)("h2",{id:"solution-\ufe0f"},"Solution \u2714\ufe0f"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/cloudy.png",alt:"-----------------------------------------------------"})),(0,s.kt)("p",null,"The solution was to use Docusaurus to transform Markdown content files into static HTML files, and GitHub Actions to automatically build those files and deploy them from the Docusaurus repository to the pre-existing GitHub Pages repository."))}m.isMDXComponent=!0},5316:function(e,t,n){t.Z=n.p+"assets/images/docusaurus_gh_cms-226adb329a7cab09f759d611463fd44f.png"}}]);